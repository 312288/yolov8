#YOLOV3基础原理篇
#两个典型的yolo公共数据集 coco voc

卷积公式：out=(in+2*padding-kernel_size)/strid+1
reshape 中是（批量数，通道大小，长，宽）

YOLO评价指标：
指标0：准确率 accuracy
指标1：精确率 perception:
指标2：召回率 recall
指标3：检测速度 FPS  #单位检测数量
指标4：MAP值
指标5：F1-score值

#正反例取决于关注对象是什么
P=positive，Negative
T预测正确，F预测错误(True,False)
TP(判断正确),FP(实际为负例，被错误划分为正例，判断错误)
TN(True Negative 实际负例，同时被分类为负例，判断正确),FN(False Negative 实际为正例，被划分为负例，判断错误)

#根据设置IOU阈值来计算:
置信度====>类别置信度
置信度：1.是否有物体 0或1 2.模型认为真实框和预测框的IOU值 3.一种将物体完全框柱的自信程度
#因为具有多个检测头因此去掉低置信度的框
#==>NMS算法提出:取最大值==>阈值设置就很重要


置信度：筛选最好的预测框 0-1
IOU=重叠/交集
准确率：TP+TN/(TP+TN+FP+FN) #(实际上存在缺陷)
精度: perception=TP/(TP+FP)
召回率(查全率): recall=TP/(TP+FN)  #实际上真的正样本被找到的比例
F1-score: F1=2*[(perception*recall)/(perception+recall)]  #(精确率和召回率的调和平均)
检测速度：FPS

#MAP P-R图各个小矩阵围成面积
#AP(Average perception)值：2010年后-->所有recall数据点对应perception值，求和取平均
#MAP(mean Average perception)  所有不同类别目标（人 篮球 鸡）AP值再次取平均，不同数据集可能定义不同
#检测速度 每秒能检测的图片数量





#构建P-R图
P-y,R-x
MAP值，即综合指标值
P-R图所围成面积大小
NMS 非极大抑制值 取大的IOU

#原理解析  https://blog.csdn.net/qq_40716944/article/details/114822515
#YOLOV1 //you look only once
onstage 方法,实时监测，速率快，
关注：网络结构，输出值，损失函数

#v2加入batch normal 默认对每一个卷积都加一个BN, 归一化
rxi+belta
BN和dropout不可共存


#v3结构奠定结构基础

coco数据集，80个类别
多少个类别决定了输出大小，因为要预留类别个大小数据，说明对其分类的预测概率

1.主干部(分类)
2.颈部(融合)
3.检测头部

1.cbl=cov+bn+relu(激活函数)
2.resunit=（input x）->cbl->cbl + x
3.resXi=cbl+resunit 残差
#头部 分类
多个检测有匹配不同大小检测对象

#颈部 图像金字塔 特征融合
13*13->26*26->52*52 上采样
上下采样同时结合（上采样，小的特征不断和扩大通道数特征融合，下采样，与之相反）
融合：下采样和上采样相同大小的图片融合，小的和大的融合，重复融合，理论上会提升效果

#检测头 3个
13*13 因为分配框较小，所以检测大物体，以此类推
26*26 检测中物体
52*52 检测小物体

1*1*256  （通道位数调整） 卷积就相当于进行全连接的线性变换 直接把in的通道变成256但是不改变原来的图片大小
# kernel_size=1,     # 1x1卷积核
 stride=1,          # 步长1
padding=0,

3*3 卷积核 保证图片大小不变，用于空间特征提取，主流选择
根据公式： out=(in+2*padding-kernel_size)/strid+1
由于特殊性：out=in+2*1-3+1=in ==>out=in
padding=1 strid=1
conv3x3 = nn.Conv2d(
    in_channels=256,
    out_channels=256,
    kernel_size=3,
    stride=1,
    padding=1,  # 关键参数！
    bias=False
)

#V3 Loss函数
3部分组成：坐标损失，正样本置信度损失和类别损失，负样本置信度损失
正样本 IOU值取阈值最大，或最大，0和1作为置信度使得最大值可能为1
置信度标签为1
使用惩罚项，使得大框系数小，小框系数大，使得其达到一种平衡
使用sigmoid激活函数
x^ 数据代表预测数据

#小目标检测一直是有局限性的
#高置信度存在密集无题检测时存在问题


